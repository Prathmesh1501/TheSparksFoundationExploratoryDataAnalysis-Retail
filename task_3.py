# -*- coding: utf-8 -*-
"""Task 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ttpQS9ARubjQvveq9UUkR0VHb7ofzw9e

Import the libraries
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np  
import matplotlib.pyplot as plt  
# %matplotlib inline

import warnings as wg
wg.filterwarnings("ignore")

"""Read the dataset"""

dataset = pd.read_csv("SampleSuperstore.csv")

dataset.head()

"""Data PreProcessing"""

dataset.shape

dataset.columns

dataset.isnull().sum()

dataset.info()

dataset.describe()

dataset.duplicated().sum()

dataset.drop_duplicates()
dataset.head()

dataset = dataset.drop(['Postal Code'],axis=1)

dataset.head()

"""Data Analysis"""

import seaborn as sns 
sns.pairplot(dataset)

dataset.corr()
plt.figure(figsize=(10,5))
sns.heatmap(dataset.corr(), annot=True)
plt.show()

plt.figure(figsize = (6,6))
textprops = {"fontsize":15}
plt.title('Category')
plt.pie(dataset['Category'].value_counts(), labels=dataset['Category'].value_counts().index,autopct='%1.1f%%',textprops = textprops)
plt.show()

plt.figure(figsize= (10,16))
dataset.groupby('Category')['Profit','Sales'].agg(['sum']).plot.bar()
plt.ylabel('Profit')
plt.show()

top_category_s = dataset.groupby("Category").Sales.sum().nlargest(n=100)

top_category_p = dataset.groupby("Category").Profit.sum().nlargest(n=100)

plt.style.use('seaborn')
top_category_s.plot(kind = 'bar',figsize = (10,5),fontsize = 14)
top_category_p.plot(kind = 'bar',figsize = (10,5),fontsize = 14,color='red')
plt.xlabel('Category',fontsize = 15)
plt.ylabel('Total Sales/Profits',fontsize = 15)
plt.title("Top Category Sales vs Profit",fontsize = 15)
plt.show()

top_subcategory_s = dataset.groupby("Sub-Category").Sales.sum().nlargest(n = 100)
top_subcategory_p = dataset.groupby("Sub-Category").Profit.sum().nlargest(n = 100)
plt.style.use('seaborn')
top_subcategory_s.plot(kind = 'bar',figsize = (10,5),fontsize = 14)
top_subcategory_p.plot(kind = 'bar',figsize = (10,5),fontsize = 14, color = 'red')
plt.xlabel('Sub-Category',fontsize = 15)
plt.ylabel('Total Sales/Profits',fontsize = 15)
plt.title("Top Sub-Category Sales vs Profit",fontsize = 15)
plt.show()

plt.figure(figsize=(14,12))
statewise = dataset.groupby(['Sub-Category'])['Profit'].sum().nlargest(50)
statewise.plot.barh()

plt.figure(figsize=(8,7))
sns.lineplot(dataset['Discount'], dataset['Profit'], data=dataset)

plt.figure(figsize = (6,6))
plt.title('Region')
plt.pie(dataset['Region'].value_counts(), labels=dataset['Region'].value_counts().index,autopct='%1.1f%%')
plt.show()

top_states_s = dataset.groupby("State").Sales.sum().nlargest(n=10)
top_states_p = dataset.groupby("State").Profit.sum().nlargest(n = 10)
plt.style.use('seaborn')
top_states_s.plot(kind = 'bar',figsize = (10,5),fontsize = 14)
top_states_p.plot(kind = 'bar',figsize = (10,5),fontsize = 14, color = 'red')
plt.xlabel('States',fontsize = 15)
plt.ylabel('Total sales',fontsize = 15)
plt.title("Top 10 states Sales vs Profit",fontsize = 15)
plt.show()

plt.style.use('seaborn')
dataset.plot(kind = "scatter",figsize = (10,5), x = "Sales", y= "Profit", c = "Discount", s = 20,fontsize = 16, colormap = "viridis")
plt.ylabel('Total Profits',fontsize = 16)
plt.title("Interdependency of Sales,Profits and Discounts",fontsize = 16)

plt.show()

"""**Conclusion**

1)From subcategory we should decrease the sales of table                                                  
2)Concentrate on Califirnia and New York to make extra profit                                            
3)We have to decrease the sales of furniture                                 
4)Increase the sale in East Coast to make more profit                                          

"""